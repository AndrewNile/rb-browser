rb-browser

This is a fork of rb-browser with updates to make it work with modern ffmpeg libs, it has been tested on a typical Ubuntu 18.04 system.

Dependencies:

sudo apt install libfreetype6-dev libavformat-dev libxft-dev ffmpeg-dev libavcodec-dev libavcodec-dev libavformat-dev libavutil-dev libswscale-dev xsltproc

To build simply run 'make' (presuming you have the usual build tools for your platform installed


Usage:

rb-browser [-v] [-f] [-d] [-o <video_output_method>] [-k <keymap_config_file>] [-t <timeout>] [-n <network_id>] [-r] [<service_gateway>]

Display the MHEG apps downloaded with rb-download.

The -r option means use a remote backend (rb-download running on another host). If -r is specified, then <service_gateway> should be the host[:port] that rb-download is running on.

The default backend is "-r 127.0.0.1" ie rb-download running on the same machine as rb-browser.

Eg, on a single host, do this:

rb-download 4165 &
rb-browser

To run the frontend on a different host, do this on the backend:

rb-download 4165 &

and run this on the frontend:

rb-browser -r 10.0.0.1

where 10.0.0.1 is the IP or hostname of the backend.

If -r is not specified, rb-download is running on the same machine and <service_gateway> should be an entry in the services directory. This is really only useful for debugging, or running MHEG apps you have written yourself.

Eg, to run an MHEG app you have previously downloaded and saved, do this:

rb-browser path/to/saved/services/4165

Although this will not give you any video or audio as this is streamed from rb-download. Retuning will also probably not work unless you've also saved the services directory for the channel you want to retune to.

For local backends, -n allows you to specify a Network ID that will be used to resolve rec://svc/def. By default, the Network ID is left blank in rec://svc/def. If you don't know what this means, you can probably just ignore the -n flag!

It will display the app in a window, use -f for full screen mode.

The -d flag disables all audio and video output.

Use -o to choose a video output method if the default is not supported/too slow on your graphics card. 'rb-browser -o' will give a list of available video output methods.

The -v flag enables verbose/debug mode.

The -t flag determines how long (in seconds) it will poll for missing files before passing an error to the MHEG application. The default is 10 seconds.

Use the -k option to load a keymap (keymap config files can be generated with the rb-keymap command). The default keys to navigate around the apps are:

Key	Function
Cursor Keys	Up/Down/Left/Right
0 - 9	0 - 9
r	Red
g	Green
b	Blue
y	Yellow
Return	OK/Select
Escape	Cancel
t	Text
e	EPG (NZ Profile only)
Notes
You will need the "expat" XML parsing library and the xsltproc XML stylesheet processor that comes with "libxslt" to compile it. On Gentoo, you can just:

emerge expat libxslt

If the compile fails with errors about missing .c files, expat is not installed. If the compile fails with errors about function names ending in "_dup" being missing, libxslt is not installed.

To run it you need an X server that supports the Xrender extension and you need to have libpng, freetype2 and ffmpeg installed.

It does not implement the whole MHEG spec. However, it seems to be enough to view everything that is currently being broadcast on the 'Freeview' channels in the UK. If it comes across something that is not yet implemented it will print out a message on the console. Let us know if you find anything it can't do.

It does not currently use any acceleration that your graphics card may provide so it'll drop video frames in full screen mode unless you have a very fast processor (or your full screen X resolution is set to 720x576 pixels).

It will display apps that conform to the UK MHEG Profile (available from www.dtg.org.uk). Thanks to some patches and info from Steve at OpenMedia in NZ, it should also be able to download apps conforming to the NZ MHEG spec and display them.

When it starts you will probably need to press 'r' (for BBC) or 't' (for ITV/C4) to activate any MHEG app that may be waiting for you to do something.

The default font for the UK MHEG Profile is Tiresias Screenfont which was developed with the RNIB to be readable on TV screens. You can download this font as part of the DigiTV iTuner package from Nebula Electronics. Extract the file called tt7268m_802.ttf and add it to your X Windows fonts. The easiest way is to install DigiTV iTuner on a Windows box and then copy the C:\Windows\Fonts\tt7268m_802.ttf file onto your Linux box. To install new X fonts in KDE, open the Control Centre application, go to the System Administration section and select Font Installer.

Alternatively, if you know someone in Australia, ABC is currently broadcasting Tiresias.pfr as part of their TV guide application. You can download it with rb-download. The Australian applications are MHP, not MHEG, so you should probably look at www.openmhp.org for something to display them.

If the Tiresias Screenfont is not available, rb-browser first tries to use the FreeSans font instead. If this is also not available, rb-browser uses whatever scalable font Xft returns for "sans". Note that these fonts will have different metrics and so may not fit into the spaces in the MHEG apps designed for Tiresias.
mhegc
Usage:

mhegc [-vv] [-o <output_file>] [<input_file>]

Will convert the <input_file> (or stdin if no filename is given) from the MHEG text form into the ASN1 form. The DER encoded ASN1 object will be stored in the given output file (or in a file named "a" if no -o option is given).

The -v flag enables debug mode and will print details about the ASN1 object it creates. Use -vv for even more info.

The redbutton-author package contains a "Hello World" example from http://www.digvid.info/mheg5/hello_world.php. To compile the Hello World example, do this:

mhegc -o helloworld/startup helloworld/startup.txt
mhegc -o helloworld/hello.mhg helloworld/hello.mhg.txt

Then to run it:

rb-browser helloworld/

mhegd
Usage:

mhegd [-vv] [-o <output_file>] <input_file>

Will convert the <input_file> from the ASN1 form to the MHEG text format. The text will be written to the given output file (or to stdout if no -o option is given).

The -v flag enables debug mode and will print details about the ASN1 object as it is decoded. Use -vv for even more info. 

